extend layout

block head
    style.
        #nav ul{text-align:left;border-bottom:1px solid #ccc; list-style-type:none;padding:10px 10px;}
        #nav ul li{display:inline;}
        #nav ul li a{font-weight:bold;border:1px solid #ccc; text-decoration:none;padding:10px 20px;border-bottom:none;margin-right:5px;margin-bottom:1px;background-color:#eee}
        #nav ul li a.current{background-color:#fff;border-bottom:1px solid #fff;}
        #nav ul li a:hover{color:#000;background-color:#eee;}

        lis{
            float:left;
            list-style:none;
            margin:10px;
            width:150px;
            height:30px;
            background:rgba(128,128,128,0.5);
            text-align:center;
            font-size:1em
            color:rgb(192,192,192);
            vertical-align:middle;
            line-height:30px;
        }

        .same_line{
            float:left;
            margin-left:20px;
            margin-top:auto;
            margin-bottom:auto;
        }

        .row{
            margin-top:40px;
        }

    script.

        function getLeagueInfo(){
            $.getJSON('/players_league', function(response) {
                parseLeague(response);
            });
        }

        function parseLeague(response){
            var leagues = JSON.parse(response);
            for(var i = 0; i < leagues.length; i++){
                var league = leagues[i]
                $('#league_select').append("<option value='" + league.league_id + "'>" + league.league_name.substr(11) + "</option>");
            }
            var selectedLeague = sessionStorage.getItem("selectedLeague");
            $('#league_select').val(selectedLeague).selected = true;
        }

        function toComprehensive(){
            $('#comprehensive').show();
            $('#single_player').hide();
        }
    

        function toSinglePlayer(){
            $('#comprehensive').hide();
            $('#single_player').show();

        }

        function filterMatchData() {
            var game_times = $('#game_times').val();
            var table = $('#data').DataTable();
            var rows = table.rows().data().filter(function(row) {
                return Number(row[1]) >= Number(game_times);
            });

            table.destroy();
            var new_table = $('#data').DataTable({
                data: rows,
                info: false,
                paging: true,
                pageLength: 20,
                lengthChange: false,
                searching: false,
                responsive: true,
                'bAutoWidth': true
            });
        }

        function selectCompreData(){
            var start_time = $('#com_start_time').val();
            var end_time = $('#com_end_time').val();
            var league_id = $('#league_select').val();

            if (Number(league_id) >= 0) {
                sessionStorage.setItem("selectedLeague", league_id);
                window.location.href='/players_ranking/'+league_id;

                //- var table = $('#data').DataTable();
                //- table.destroy();
                //- $.getJSON('/players_ranking/'+league_id, function(response) {
                //-     var new_table = $('#data').DataTable({
                //-         processing: true,
                //-         data: response.data,
                //-         searching: false,
                //-         //- columns: [
                //-         //-     { data : "player_name" },
                //-         //-     { data : "num_played"  },
                //-         //- ]
                //-     });
                //- });
            }
            else if (Number(league_id) == -1) {
                sessionStorage.setItem("selectedLeague", "-1");
                window.location.href='/players_ranking';
            }
        }

        function selectSingleData(playerId){
        }

        function selectPlayerFromTeam(teamName){
           alert(teamName);
        }

block content
    div#nav
      ul
        li 
          a(href='/team_fetch_match') 战队分析
        li 
          a(href='/players_ranking') 选手分析

    .row
      ul.tab
          lis(onclick='toComprehensive()') 综合分析
          lis(onclick='toSinglePlayer()') 单独分析
    #comprehensive
        .row
            h4.same_line 时间筛选
            input(type='date', value='2016-04-21')#com_start_time.same_line
            h4.same_line to
            input(type='date')#com_end_time.same_line
        .row
            h4.same_line 联赛筛选
            select(onchange='selectCompreData()')#league_select.same_line
                option(value='-1',selected='true') 所有联赛
        .row
            h4.same_line 场次筛选
            select(onchange='filterMatchData()')#game_times.same_line
                option(value='1',selected='true') >=1场比赛
                option(value='3') >=3场比赛
                option(value='5') >=5场比赛
                option(value='10') >=10场比赛
                option(value='20') >=20场比赛
                option(value='50') >=50场比赛
        //选手名称 场次 输出 胜率 消耗 回复 控制 参团率 抓人 落单被抓 CNE URGPM GPM 买眼 反眼 控符 AP
        .row
            .col-xs-12.table-responsive
                table.table.table-striped.table-condensed#data
                    thead
                        tr
                            //th match_id
                            th 选手名称
                            th 场次 
                            th 买假腿场数
                            th 平均每场切假腿
                            th 平均每分钟切假腿
                            th 输出
                            th 胜率 %
                            th 消耗
                            th 回复
                            th 控制
                            th 参团率
                            th 抓人
                            th 落单被抓
                            th CNE
                            th URGPM
                            th GPM
                            th 买眼
                            th 反眼
                            th 控符
                            th APM
                    tbody
                        each entry, i in data || []
                            tr
                                //td #{entry.match_id}
                                td #{entry.player_name}
                                td #{entry.num_played}
                                td #{Math.round(entry.power_treads_buytimes)}
                                - var pt_use = entry.power_treads_buytimes > 0 ? (entry.sum_power_treads_usetimes / entry.power_treads_buytimes) : 0;
                                td #{Math.round(pt_use)}
                                - var pt_use_pm = entry.power_treads_buytimes > 0 ? (entry.sum_pt_uspermin / entry.power_treads_buytimes) : 0;
                                td #{pt_use_pm.toFixed(2)}

                                td #{Math.round(entry.av_create_total_damage)}
                                td #{Math.round(100*entry.win_times/entry.num_played)}
                                td #{Math.round(entry.av_consumedamage)}
                                td #{Math.round(entry.av_healing)}
                                td #{Math.round(entry.av_create_deadly_stiff_control)}
                                td #{Math.round(entry.tf_ratio)}
                                td #{Math.round(entry.av_alonekillednum)}
                                td #{Math.round(entry.av_alonebecatchednum)}
                                td #{Math.round(entry.av_killherogold - entry.av_fedenemygold)}
                                td #{Math.round(entry.av_unrrpm)}
                                td #{Math.round(entry.av_rgpm)}
                                td #{Math.round(entry.av_vision_bought)}
                                td #{Math.round(entry.av_vision_kill)}
                                td #{Math.round(entry.av_runes)}
                                td #{Math.round(entry.av_apm)}



    #single_player
        .row
            h4.same_line 选择战队
            select(onchange='selectPlayerFromTeam(value)')#league_select.same_line
                option(value='0',selected='true') Select a Team 
                - for (var i = 0; i < constants.common_teams.length; ++i)
                  option(value=constants.common_teams[i].team_id) #{constants.common_teams[i].name}
            h4.same_line 选手
            select(onchange='selectSingleData(value)')#league_select.same_line
                option(value='0',selected='true') 选手名称
        .row
            h4.same_line 时间筛选
            input(type='date', value='2016-04-21')#sin_start_time.same_line
            h4.same_line to
            input(type='date')#sin_end_time.same_line
        .row
            .col-md-12.table-responsive
                table.table.table-striped.table-condensed.rankable#team_fetch_match
                //+data_table({rankable: true})
                    thread
                        tr
                            th #
                            th 英雄名称
                            th 场次
                            th 输出
                            th 胜率
                            th 消耗
                            th 回复
                            th 控制
                            th 参团率
                            th 抓人
                            th 落单被抓
                            th CNE
                            th URGPM
                            th GPM
                            th 买眼
                            th 反眼
                            th 控符
                            th APM

    script.
        $('#data').DataTable({
            info: false,
            paging: true,
            pageLength: 20,
            lengthChange: false,
            searching: false,
            responsive: true,
            'bAutoWidth': true,
        });

        document.getElementById('com_end_time').valueAsDate = new Date();
        document.getElementById('sin_end_time').valueAsDate = new Date();
        toComprehensive()
        getLeagueInfo()