extend layout

block head
    style.
        #nav ul{text-align:left;border-bottom:1px solid #ccc; list-style-type:none;padding:10px 10px;}
        #nav ul li{display:inline;}
        #nav ul li a{font-weight:bold;border:1px solid #ccc; text-decoration:none;padding:10px 20px;border-bottom:none;margin-right:5px;margin-bottom:1px;background-color:#eee}
        #nav ul li a.current{background-color:#fff;border-bottom:1px solid #fff;}
        #nav ul li a:hover{color:#000;background-color:#eee;}

        lis{
            float:left;
            list-style:none;
            width:150px;
            height:30px;
            background:#eee;
            text-align:center;
            font-size:1em;
            color:#2780e3;
            vertical-align:middle;
            line-height:30px;
            margin-left:10px;
        }

        lis a{font-weight:bold;border:1px solid #ccc; text-decoration:none;background-color:#eee}

        lis.active a{color:#000;background-color:#eee;}

        lis a.current{background-color:#fff;border-bottom:1px solid #fff;}

        .same_line{
            float:left;
            margin-left:20px;
            margin-top:auto;
            margin-bottom:auto;
        }

        .row{
            margin-top:40px;
        }

    script.

        var league_id_cnt="#{league_id}";
        var st_cnt = "#{st}";
        var ed_cnt = "#{ed}";

        function getLeagueInfo(cnt_league_id){
            $.getJSON('/players_league', function(response) {
                parseLeague(response, cnt_league_id);
            });
        }

        function parseLeague(response, cnt_league_id){
            var leagues = JSON.parse(response);
            var sorted_league = [];
            for (var i in leagues) {
                if (leagues[i].num_matches > 0) {
                    sorted_league.push(leagues[i]);
                }
            }
            sorted_league.sort(function(l1, l2) {
                l2.num_matches - l1.num_matches;
            });

            for(var i = 0; i < sorted_league.length; i++){
                var league = sorted_league[i];
                $('#league_select').append("<option value='" + league.league_id + "'>" + league.league_name.substr(11) + " (" + league.num_matches + " matches) </option>");
            }

            if (league_id_cnt.length > 0) {
                $('#league_select').val(league_id_cnt).selected=true;
            }

            if (st_cnt.length > 0) {
                $('#com_start_time').val(moment.unix(Number(st_cnt)).format("YYYY-MM-DD"));
            }

            if (ed_cnt.length > 0) {
                $('#com_end_time').val(moment.unix(Number(ed_cnt)).format("YYYY-MM-DD"));
            }
        }

        function showPage() {
            $('#data').DataTable({
                info: false,
                paging: true,
                pageLength: 20,
                lengthChange: true,
                searching: false,
                responsive: true,
                'bAutoWidth': false,
                'scrollX': true
            });
        }

        function filterMatchData() {
            var game_times = $('#game_times').val();
            var table = $('#data').DataTable();
            var rows = table.rows().data().filter(function(row) {
                return Number(row[1]) >= Number(game_times);
            });

            table.destroy();
            var new_table = $('#data').DataTable({
                data: rows,
                info: false,
                paging: true,
                pageLength: 20,
                lengthChange: true,
                searching: false,
                responsive: true,
                'bAutoWidth': false,
                'scrollX': true
            });
        }

        function selectCompreData(){
            var start_time = $('#com_start_time').val();
            var end_time = $('#com_end_time').val();
            var league_id = $('#league_select').val();

            var st = new Date(start_time).getTime() / 1000;
            var ed = new Date(end_time).getTime() / 1000;

            if (Number(league_id) >= 0) {
                window.location.href='/players_ranking/'+league_id + '?st='+st+'&ed='+ed;

                //- var table = $('#data').DataTable();
                //- table.destroy();
                //- $.getJSON('/players_ranking/'+league_id, function(response) {
                //-     var new_table = $('#data').DataTable({
                //-         processing: true,
                //-         data: response.data,
                //-         searching: false,
                //-         //- columns: [
                //-         //-     { data : "player_name" },
                //-         //-     { data : "num_played"  },
                //-         //- ]
                //-     });
                //- });
            }
            else if (Number(league_id) == -1) {
                window.location.href='/players_ranking'+'?st='+st+'&ed='+ed;
            }
        }

block content

    div#nav
      ul
        li 
          a(href='/team_fetch_match') 战队分析
        li.active
          a(href='#') 选手分析
        li
          a(href='/hero_analysis')  英雄分析
    .row
      ul
          lis.active
            a(href='#') 综合分析
          lis
            a(href='/single_player') 单独分析


    #comprehensive
        .row
            h4.same_line 时间筛选
            input(type='date', value='2016-09-18', onchange='selectCompreData()')#com_start_time.same_line
            h4.same_line to
            input(type='date', onchange='selectCompreData()')#com_end_time.same_line
        .row
            h4.same_line 联赛筛选
            select(onchange='selectCompreData()')#league_select.same_line
                option(value='-1',selected='true') 所有联赛
        .row
            h4.same_line 场次筛选
            select(onchange='filterMatchData()')#game_times.same_line
                option(value='1',selected='true') >=1场比赛
                option(value='3') >=3场比赛
                option(value='5') >=5场比赛
                option(value='10') >=10场比赛
                option(value='20') >=20场比赛
                option(value='50') >=50场比赛
        //选手名称 场次 输出 胜率 消耗 回复 控制 参团率 抓人 落单被抓 CNE URGPM GPM 买眼 反眼 控符 AP
        .row
            .col-xs-12.table-responsive
                table.table.table-striped.table-condensed#data
                    thead
                        tr
                            //th match_id
                            th 选手名称
                            th 场次 
                            //th 买假腿场数
                            //th 平均每场切假腿
                            //th 平均每分钟切假腿
                            th 胜率 %
                            th 输出
                            th 消耗
                            th 回复
                            th 控制
                            th 参团率 %
                            th 抓人
                            th 落单被抓
                            th CNE
                            th URGPM
                            th RGPM
                            th 买眼
                            th 反眼
                            //th 控符
                            //th APM
                    tbody
                        each entry, i in data || []
                            tr
                                //td #{entry.match_id}
                                td #{entry.player_name}
                                td #{entry.num_played}
                                //td #{Math.round(entry.power_treads_buytimes)}
                                //- var pt_use = entry.power_treads_buytimes > 0 ? (entry.sum_power_treads_usetimes / entry.power_treads_buytimes) : 0;
                                //td #{Math.round(pt_use)}
                                //- var pt_use_pm = entry.power_treads_buytimes > 0 ? (entry.sum_pt_uspermin / entry.power_treads_buytimes) : 0;
                                //td #{pt_use_pm.toFixed(2)}
                                td #{Math.round(100*entry.win_times/entry.num_played)}
                                td #{Math.round(entry.av_create_total_damage)}
                                td #{Math.round(entry.av_consumedamage)}
                                td #{Math.round(entry.av_healing)}
                                td #{Math.round(entry.av_create_deadly_stiff_control)}
                                td #{Math.round(entry.tf_ratio)}
                                - var av_alonekillednum2 = entry.av_alonekillednum;
                                td #{Number(av_alonekillednum2).toFixed(1)}
                                - var av_alonebecatchednum2 = entry.av_alonebecatchednum;
                                td #{Number(av_alonebecatchednum2).toFixed(1)}
                                td #{Math.round(entry.av_killherogold - entry.av_fedenemygold)}
                                td #{Math.round(entry.av_unrrpm)}
                                td #{Math.round(entry.av_rgpm)}
                                - var av_vision_bought2 = entry.av_vision_bought;
                                td #{Number(av_vision_bought2).toFixed(1)}
                                - var av_vision_kill2 = entry.av_vision_kill;
                                td #{Number(av_vision_kill2).toFixed(1)}
                                //td #{Math.round(entry.av_runes)}
                                //td #{Math.round(entry.av_apm)}

    script.
        showPage()

        document.getElementById('com_end_time').valueAsDate = new Date();
        getLeagueInfo()