extend layout

block head
    style.
        #nav ul{text-align:left;border-bottom:1px solid #ccc; list-style-type:none;padding:10px 10px;}
        #nav ul li{display:inline;}
        #nav ul li a{font-weight:bold;border:1px solid #ccc; text-decoration:none;padding:10px 20px;border-bottom:none;margin-right:5px;margin-bottom:1px;background-color:#eee}
        #nav ul li a.current{background-color:#fff;border-bottom:1px solid #fff;}
        #nav ul li a:hover{color:#000;background-color:#eee;}

        lis{
            float:left;
            list-style:none;
            margin:10px;
            width:150px;
            height:30px;
            background:rgba(128,128,128,0.5);
            text-align:center;
            font-size:1em
            color:rgb(192,192,192);
            vertical-align:middle;
            line-height:30px;
        }

        .same_line{
            float:left;
            margin-left:20px;
            margin-top:auto;
            margin-bottom:auto;
        }

        .row{
            margin-top:40px;
        }

    script.

        var team_id_cnt = "#{team_id}";
        var player_id_cnt = "#{account_id}";
        var st_cnt = "#{st}";
        var ed_cnt = "#{ed}";

        function showPage() {
            $('#single_player_data').DataTable({
                info: false,
                paging: true,
                pageLength: 20,
                lengthChange: true,
                searching: false,
                responsive: true,
                'bAutoWidth': false,
                'scrollX': true
            });
        }

        function selectSingleData(){
            var player_id = $('#player_select').val();
            var start_time = $('#sin_start_time').val();
            var end_time = $('#sin_end_time').val();
            var team_id = $('#team_select').val();

            var st = new Date(start_time).getTime() / 1000;
            var ed = new Date(end_time).getTime() / 1000;

            window.location.href='/single_player/'+player_id+'?team_id='+team_id+'&st='+st+'&ed='+ed;
        }

        function selectPlayerFromTeam(team_id){
            $.getJSON('/teamPlayers/'+team_id, function(response) {
                parsePlayers(response);
            });
        }

        function getPlayers() {
            if (team_id_cnt.length > 0) {
                $.getJSON('/teamPlayers/'+team_id_cnt, function(response) {
                    parsePlayers(response);
                });
            }
        }

        function parsePlayers(response){
            var players = JSON.parse(response);
            $('#player_select').empty();
            $('#player_select').append("<option value='0'>选手名称</option>");
            for (var i = 0; i < players.length; ++i) {
                var player = players[i]
                $('#player_select').append("<option value='" + player.account_id + "'>" + player.player_name + "</option>");
            }
            $('#player_select').trigger("chosen:updated");

            if (team_id_cnt.length > 0) {
                $('#team_select').val(team_id_cnt).selected = true;
                $('#player_select').val(player_id_cnt).selected = true;
            }

             if (st_cnt.length > 0) {
                $('#sin_start_time').val(moment.unix(Number(st_cnt)).format("YYYY-MM-DD"));
            }

            if (ed_cnt.length > 0) {
                $('#sin_end_time').val(moment.unix(Number(ed_cnt)).format("YYYY-MM-DD"));
            }
        }

        function toComprehensive() {
            window.location.href='/players_ranking';
        }



block content
    div#nav
      ul
        li 
          a(href='/team_fetch_match') 战队分析
        li 
          a(href='/players_ranking') 选手分析

    .row
      ul.tab
          lis(onclick='toComprehensive()') 综合分析
          lis() 单独分析

    #single_player
        .row
            h4.same_line 选择战队
            select(onchange='selectPlayerFromTeam(value)')#team_select.same_line
                option(value='0',selected='true') Select a Team 
                - for (var i = 0; i < constants.common_teams.length; ++i)
                  option(value=constants.common_teams[i].team_id) #{constants.common_teams[i].name}
            h4.same_line 选手
            select(onchange='selectSingleData()')#player_select.same_line
                option(value='0',selected='true') 选手名称
        .row
            h4.same_line 时间筛选
            input(type='date', value='2016-04-21', onchange='selectSingleData()')#sin_start_time.same_line
            h4.same_line to
            input(type='date', onchange='selectSingleData()')#sin_end_time.same_line
        .row
            .col-md-12.table-responsive
                table.table.table-striped.table-condensed.rankable#single_player_data
                    thead
                        tr
                            th 英雄
                            th 场次
                            th 胜率 %
                            th 输出
                            th 消耗
                            th 回复
                            th 控制
                            th 参团率 %
                            th 抓人
                            th 落单被抓
                            th CNE
                            th URGPM
                            th GPM
                            th 买眼
                            th 反眼
                            //th 控符
                            //th APM
                    tbody
                        each entry, i in player_data || []
                            tr
                                - var hero = constants.heroes[entry.hero_id]
                                //td #{hero.localized_name}
                                td(style="padding:1px")
                                    .img-text.img-text-lg(style="float:initial;")
                                        if hero
                                            img.img-md(src=hero.img, title="#{hero.localized_name}", style="border-left-color:#{slot_color}").player-color
                                        else
                                            =hero.localized_name
                                td #{entry.num_played}
                                td #{Math.round(100*entry.win_times/entry.num_played)}
                                td #{Math.round(entry.av_create_total_damage)}
                                td #{Math.round(entry.av_consumedamage)}
                                td #{Math.round(entry.av_healing)}
                                td #{Math.round(entry.av_create_deadly_stiff_control)}
                                td #{Math.round(entry.tf_ratio)}
                                td #{Math.round(entry.av_alonekillednum)}
                                td #{Math.round(entry.av_alonebecatchednum)}
                                td #{Math.round(entry.av_killherogold - entry.av_fedenemygold)}
                                td #{Math.round(entry.av_unrrpm)}
                                td #{Math.round(entry.av_rgpm)}
                                td #{Math.round(entry.av_vision_bought)}
                                td #{Math.round(entry.av_vision_kill)}
                                //td #{Math.round(entry.av_runes)}
                                //td #{Math.round(entry.av_apm)}
    script.

        showPage();
        getPlayers()
        document.getElementById('sin_end_time').valueAsDate = new Date();