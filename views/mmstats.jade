extend layout

block content
  h1.text-center Match Making Stats
    small: abbr(title=moment(Number(result["x"][0])).format())  Updated: #{moment(Number(result["x"][0])).fromNow()}
  .row
    .col-md-12
      #mm-graph
      
      - var regions = Object.keys(constants.regions)
      - regions = [regions.slice(0, regions.length/2), regions.slice(regions.length/2)]
      each regionGroup in regions
        .table-responsive
          table.table.table-striped.table-condensed
            thead
              tr
                th
                each region in regionGroup
                  if region in result
                    th= region.replace("PerfectWorldTelecom", "PWT").replace("South", "S.").replace("PerfectWorld", "PW")
            tbody
              tr
                th: abbr(title="Number Match Making") # MM
                each region in regionGroup
                  if region in result
                    td= result[region][0] 
              tr
                th: abbr(title="24 Hours Ago (% Change)") 24H &#916;
                each region in regionGroup
                  if region in result
                    - var aDayAgo = result[region][60/(config.MMSTATS_DATA_INTERVAL || 1) * 24]
                    if aDayAgo
                      - var change = (result[region][0] - aDayAgo) /  aDayAgo * 100
                      td #{aDayAgo} 
                       if change
                         br
                         small
                          | (
                          small(class=change > 0 ? "text-success-1" : "text-danger") #{change >= 0 ? "+" : ""}#{change.toFixed(2)}%
                          | )
                    else
                      td N/A
              tr
                th Max
                each region in regionGroup
                  if region in result
                    - var max = Math.max.apply(null, result[region])
                    - var maxTime = Number(result["x"][result[region].indexOf(max + "")])
                    td: abbr(title=moment(maxTime).fromNow()) #{max} 
              tr
                th Min
                each region in regionGroup
                  if region in result
                    - var min = Math.min.apply(null, result[region])
                    - var minTime = Number(result["x"][result[region].indexOf(min + "")])
                    td: abbr(title=moment(minTime).fromNow()) #{min} 

append footer_assets
  script.
    var data = !{JSON.stringify(result)};
  script.
    var columns = [];
    for (var key in data) {
      var arr = data[key];
      arr.unshift(key);
      columns.push(arr);
    }
    
    c3.generate({
      bindto: document.getElementById("mm-graph"),
      size: {
        height: 500
      },
      data: {
        x: 'x',
        columns: columns
      },
      color: {
        pattern: ['#1f77b4', '#aec7e8', '#ff7f0e', '#ffbb78', '#2ca02c', '#98df8a', '#d62728', '#ff9896', '#9467bd', '#c5b0d5', '#8c564b', '#c49c94', '#e377c2', '#f7b6d2', '#7f7f7f', '#c7c7c7', '#bcbd22', '#dbdb8d', '#17becf', '#9edae5']
      },
      point: {
        show: false
      },
      axis: {
        x: {
          label: "Time ago",
          tick: {
            count: 180,
            format: function(x) {
              return moment(x).fromNow();
            }
          }
        },
        y: {
          label: "# players match making"
        }
      }
    })
